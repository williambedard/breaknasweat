{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-main-cart.css' | asset_url | stylesheet_tag }}
{% style %}
	{% render 'spaced-section' %}
{% endstyle %}

<div class="main-cart">
		<div class="container  {% if cart != empty %}is-empty{% endif %}" id="empty-cart__content">
			<h2 class="cart__empty-title title--section h2">{{ 'sections.cart.title_last' | t }}</h2>
			<p class="cart__empty-text h5">{{ 'sections.cart.empty' | t }}</p>
			<a
				href="{{ routes.collections_url | sort_by: 'best-selling' }}"
				class="button button--primary">
						{{ 'customer.account.account_button_shop' | t }}
					<span>
						{% render 'icon-button-arrow' %}
					</span>
				</span>
			</a>
		</div>
		<div class="section-header__line {% if cart == empty %}is-empty{% endif %}" id="section-cart__header">
			<div class="container">
				<div class="section-header__item">
					<div class="section-header__title__block">
							<h2 class="section-header__title title--section h2">
								{{ 'sections.cart.title_last' | t }}
							</h2>
							<a href="{{ routes.all_products_collection_url }}" class="button button--simple"><span class="button-simpl__label">{{ 'general.continue_shopping' | t }}</span></a>
					</div>
				</div>
			</div>
		</div>
		<div class="container {% if cart == empty %}is-empty{% endif %}" id="section-cart__content">
			<div class="main-cart__wrapper">
				{% liquid
					for block in section.blocks
						assign sec_id = section.id
						case block.type
							when 'main-cart-items'
								render 'main-cart-items', main_section: block, main_id: sec_id
							when '@app'
								render block
							when 'main-cart-footer'
								render 'main-cart-footer', main_section: block, main_id: sec_id
						endcase
					endfor
				%}
			</div>
		</div>
</div>
{% javascript %}
	class CartNote extends HTMLElement {
		constructor() {
			super();

			this.addEventListener(
				'change',
				debounce((event) => {
					const body = JSON.stringify({ note: event.target.value });
					fetch(`${routes.cart_update_url}`, { ...fetchConfig(), ...{ body } });
				}, 300)
			);
		}
	}
	customElements.define('cart-note', CartNote);
{% endjavascript %}
{% schema %}
{
	"name": "t:sections.main-cart.name",
	"class": "section-main-cart",
	"tag": "section",
	"limit": 1,
	"settings": [
		{
			"type": "header",
			"content": "t:sections.all.section_margin.header.content"
		},
		{
			"type": "range",
			"id": "margin_top",
			"min": 0,
			"max": 200,
			"step": 10,
			"default": 20,
			"unit": "px",
			"label": "t:sections.all.section_margin.margin_top.label"
		},
		{
			"type": "range",
			"id": "margin_bottom",
			"min": 0,
			"max": 200,
			"step": 10,
			"default": 20,
			"unit": "px",
			"label": "t:sections.all.section_margin.margin_bottom.label"
		}
	],
	"blocks": [
		{
			"type": "main-cart-items",
			"name": "t:sections.main-cart.blocks.main-cart-items.name",
			"limit": 1,
			"settings": [
				{
					"type": "header",
					"content": "t:sections.all.image.header.content"
				},
				{
					"type": "select",
					"id": "image_ratio",
					"options": [
						{
							"value": "landscape",
							"label": "t:sections.all.image.ratio.options__1.label"
						},
						{
							"value": "portrait",
							"label": "t:sections.all.image.ratio.options__2.label"
						},
						{
							"value": "square",
							"label": "t:sections.all.image.ratio.options__3.label"
						}
					],
					"default": "portrait",
					"label": "t:sections.all.image.ratio.label"
				},
				{
					"type": "select",
					"id": "image_fit",
					"label": "t:sections.all.image.fit.label",
					"options": [
						{
							"value": "contain",
							"label": "t:sections.all.image.fit.options__1.label"
						},
						{
							"value": "cover",
							"label": "t:sections.all.image.fit.options__2.label"
						}
					],
					"default": "cover"
				}
			]
		},
		{
			"type": "main-cart-footer",
			"name": "t:sections.main-cart.blocks.main-cart-footer.name",
			"limit": 1,
			"settings": [
				{
					"type": "checkbox",
					"id": "show_cart_note",
					"default": false,
					"label": "t:sections.main-cart.blocks.main-cart-footer.settings.show_cart_note.label"
				}
			]
		},
		{
			"type": "@app"
		}
	]
}
{% endschema %}
